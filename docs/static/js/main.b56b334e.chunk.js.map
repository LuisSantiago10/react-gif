{"version":3,"sources":["component/AddCategory.js","component/GifGridItem.js","helpers/getGifs.js","component/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OACI,sBAAMC,SATU,SAACC,GACjBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAIlB,SACI,uBACIO,KAAO,OACPC,MAAUT,EACVU,SAjBe,SAACP,GAExBF,EAAcE,EAAEQ,OAAOF,aAqB/BZ,EAAYe,UAAY,CACpBd,c,OAAgBe,EAAUC,KAAKC,Y,YC7BtBC,EAAc,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAE/B,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAKA,Q,uBCPJK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,0FAC2EO,UAAUF,GADrF,sBAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QATvB,kBAYZY,GAZY,4CAAH,sDCIPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACbxB,mBAAS,CAC9B8B,KAAK,GACLQ,SAAS,IAHyB,mBAC/BC,EAD+B,KACzBC,EADyB,KAetC,OATAC,qBAAU,WACNlB,EAASC,GACJkB,MAAM,SAAAC,GACHH,EAAS,CACLV,KAAKa,EACLL,SAAS,SAGvB,CAACd,IACIe,EDbyBK,CAAapB,GAAhCW,EADwB,EAC7BL,KAAYQ,EADiB,EACjBA,QACpB,OACI,qCACI,oBAAIlB,UAAU,oCAAd,SAAmDI,IACjDc,GAAW,wCACb,qBAAKlB,UAAU,YAAf,SAEQe,EAAOH,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADIA,EAAIC,aEV3BW,EAAe,WAAO,IAAD,EACM7C,mBAAS,CAAC,cADhB,mBACvB8C,EADuB,KACX/C,EADW,KAK9B,OACI,qCACC,8CACA,cAAE,EAAF,CAAcA,cAAgBA,IAC9B,uBACA,6BAEQ+C,EAAWd,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEGA,SAAaA,GADLA,YCbhCuB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.b56b334e.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n    \n    const [inputValue, setInputValue] = useState('');\n\n    const handlenInputChange = (e) =>{\n        // console.log(e.target.value);\n        setInputValue(e.target.value);\n    }\n    const hanleSubmit = (e) => {\n        e.preventDefault();\n        // console.log('submit hecho');\n        if ( inputValue.trim().length > 2) {\n            setCategories( cats => [inputValue,...cats]);\n            setInputValue('');\n        }\n    }\n    return (\n        <form onSubmit={ hanleSubmit }>\n            <input \n                type = \"text\"\n                value = { inputValue }\n                onChange = { handlenInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.prototype = {\n    setCategories : PropTypes.func.isRequired\n}\n","import React from 'react'\n\nexport const GifGridItem = ({title,url}) => {\n    // console.log({title,url});\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}/>\n            <p>{ title }</p>\n        </div>\n    )\n}\n","export const getGifs = async (category) =>{\n    const url =`https://api.giphy.com/v1/gifs/search?api_key=iNfxGXX90pwPKHHesenaPYV86sV6hWIT&q=${encodeURI(category)}&limit=10`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    //  console.log(data);\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n}","import React from 'react'\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\n\nexport const GifGrid = ({ category }) => {\n    const { data:images,loading } = useFetchGifs(category);\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            { loading && <p>Loading</p>}\n            <div className=\"card-grid\">\n                {\n                    images.map( img => (\n                        <GifGridItem \n                            key = { img.id }\n                            {...img}\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useState,useEffect } from 'react';\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n    const [state,setState] = useState({\n        data:[],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs( category )\n            .then( imgs => {\n                setState({\n                    data:imgs,\n                    loading: false\n                });\n            })\n    },[category])\n    return state;\n}\n","import React,{ useState } from 'react'\nimport { AddCategory } from './component/AddCategory';\nimport { GifGrid } from './component/GifGrid';\n\nexport const GifExpertApp = () => {\n    const [categories, setCategories] = useState(['One Punch']);\n    // const handleAdd = () =>{\n    //     setcategories( [...categories,'spidermas'] );\n    // }\n    return (\n        <>\n         <h1>GifExpertApp</h1>\n         < AddCategory setCategories={ setCategories }/>\n         <hr/>\n         <ol>\n             {\n                 categories.map( category => (\n                     <GifGrid \n                        key = { category }\n                        category = { category }\n                    />\n                 ))\n             }\n         </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from \"../src/GifExpertApp\";\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}